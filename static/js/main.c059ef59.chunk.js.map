{"version":3,"sources":["game-suonds/Wrong-answer-sound-effect.mp3","game-suonds/correct-answer.mp3","components/OptionButton.js","components/startButton.js","components/Quiz.js","App.js","index.js"],"names":["module","exports","OptionButton","name","id","setLevelValue","levelValue","type","value","onClick","e","target","for","className","parseInt","StartButton","setGameStatus","Genrate_A_Question","levelsArray","description","map","item","index","style","display","Quiz","firstNumber","secondNumber","symbol","setUserAnswer","PARFORM_AFFTER_STEPS","userAnswer","useState","error","setError","inputRef","useRef","onChange","undefined","onBlur","ref","classNameerror","current","App","setFirstNumber","setSecondNumber","setSymbol","answer","setAnswer","gameStatus","totalAnswer","setTotalAnswer","correctAnswer","setCorrectAnswer","wrongAnswer","setWrongAnswer","quizSymbolArray","newFirstNumber","newSecondNumber","randomSymbol","Math","floor","random","length","tempFirstNumber","console","log","getClassName","PLAY_SOUND","Audio","loseSound","play","winSound","updateStatus","setTimeout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c059ef59.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Wrong-answer-sound-effect.093eed4f.mp3\";","module.exports = __webpack_public_path__ + \"static/media/correct-answer.d0c5f222.mp3\";","import React,{useState} from 'react'\r\n\r\nfunction OptionButton({name,id,setLevelValue,levelValue}) {\r\n  return (\r\n   <>\r\n    <input type='radio' name='answer' id={id} value={id} onClick={(e)=> setLevelValue(e.target.value)} />\r\n  <label for={id} className={parseInt(levelValue) === id ? \"default\" : \"not-active\"}>{name}</label>\r\n   </>\r\n  )\r\n}\r\n\r\nexport default OptionButton","import React,{useState} from 'react'\r\nimport {BsFillPlayFill} from 'react-icons/bs'\r\nimport OptionButton from './OptionButton'\r\nfunction StartButton({levelValue,setLevelValue,setGameStatus,Genrate_A_Question}) {\r\n  const levelsArray = [\r\n    {\r\n      name: \"Easy\",\r\n      description: \"In this level program will genrate only addition base questions.\",\r\n    },\r\n    {\r\n      name: \"Mediam\",\r\n      description: \"In this level program will genrate addition and subtraction base questions\"\r\n    },\r\n    {\r\n      name: \"Hard\",\r\n      description: \"In this level program will genrate addition , subtraction ,multiplication and devision base questions\"\r\n    }\r\n  ]\r\n  return (\r\n    <div className='start-button'>\r\n      <div className=\"option-div\">\r\n        {levelsArray.map((item,index)=>{\r\n          return(\r\n            <OptionButton name={item.name} description={item.description} id={index} setLevelValue={setLevelValue} levelValue={levelValue}/>\r\n          )\r\n        })}\r\n      </div>\r\n        <p>{levelValue === \"\" ? \"\" : levelsArray[levelValue].description}</p>\r\n          <button onClick={()=>{\r\n            setGameStatus(\"playing\")\r\n            Genrate_A_Question()\r\n          }} style={{display: levelValue === \"\" ? \"none\" : \"inline\"}}>\r\n                    <BsFillPlayFill/>\r\n                    Start Playing Now\r\n          </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default StartButton","import React from 'react'\r\nimport { useState, useRef,useEffect } from 'react'\r\n\r\nfunction Quiz({firstNumber, secondNumber,symbol,setUserAnswer,PARFORM_AFFTER_STEPS,Genrate_A_Question,userAnswer}) {\r\n  const [error, setError] = useState(false)\r\n\r\n const inputRef = useRef(null)\r\n const resetInput = ()=>{\r\n  inputRef.current.value = \"\"\r\n  setUserAnswer(\"\")\r\n } \r\n  return (\r\n          <div className='quiz'>\r\n          <h3 className='quiz-text'>\r\n            {`${firstNumber} ${symbol} ${secondNumber}`} = <input type='number' onChange={(e)=>{\r\n              setUserAnswer(e.target.value)\r\n              userAnswer !== \"\" || userAnswer !== undefined && setError(false)\r\n            }} onBlur={()=> userAnswer === \"\" && setError(true)} ref={inputRef}></input> \r\n          </h3>\r\n          <div>\r\n  \r\n             <p classNameerror>{error ? \"Please Input an answer first\" : \"\"}</p>\r\n             <button className=\"check-button\" onClick={()=>{\r\n              if(userAnswer == \"\" || userAnswer == undefined){\r\n                setError(true)\r\n              }else{\r\n                PARFORM_AFFTER_STEPS()\r\n              Genrate_A_Question()\r\n              resetInput()\r\n              }\r\n             }}>Check</button>\r\n          </div>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default Quiz","import React, { useState } from 'react';\r\nimport StartButton from './components/startButton';\r\nimport loseSound from './game-suonds/Wrong-answer-sound-effect.mp3'\r\nimport winSound from './game-suonds/correct-answer.mp3'\r\nimport Quiz from './components/Quiz'\r\nfunction App() {\r\n  const [firstNumber, setFirstNumber] = useState()\r\n  const [secondNumber, setSecondNumber] = useState()\r\n  const [symbol, setSymbol] = useState()\r\n  const [answer, setAnswer] = useState()\r\n  const [userAnswer, setUserAnswer] = useState()\r\n  const [gameStatus, setGameStatus] = useState(\"\")\r\n  const [totalAnswer, setTotalAnswer] = useState(0)\r\n  const [correctAnswer, setCorrectAnswer] = useState(0)\r\n  const [wrongAnswer, setWrongAnswer] = useState(0)\r\n  const [levelValue, setLevelValue] = useState(\"\")\r\n\r\n  const quizSymbolArray = [\"+\",\"-\",\"*\",\"/\"]\r\n \r\n  const Genrate_A_Question = ()=>{\r\n    let newFirstNumber,newSecondNumber,randomSymbol;\r\n    if(levelValue == 0) randomSymbol = \"+\";\r\n    else if(levelValue == 1) randomSymbol = quizSymbolArray[Math.floor(Math.random() * 2)]\r\n    else randomSymbol = quizSymbolArray[Math.floor(Math.random() * quizSymbolArray.length)]\r\n     \r\n    if(randomSymbol == \"+\"){ // this will genrate an adition question\r\n       newFirstNumber = Math.floor(Math.random() * 100)\r\n       newSecondNumber = Math.floor(Math.random() * 100)\r\n      setAnswer(newFirstNumber + newSecondNumber)\r\n\r\n    } else if(randomSymbol == \"-\"){ // this will use to genrate Subtraction question\r\n      newFirstNumber = Math.floor(Math.random() * 100)\r\n      newSecondNumber = Math.floor(Math.random() * 100)\r\n\r\n      if(newFirstNumber < newSecondNumber){ // this will make sure the second value is < first value\r\n        let tempFirstNumber = newFirstNumber\r\n        newFirstNumber = newSecondNumber\r\n        newSecondNumber = tempFirstNumber \r\n      } // ends value check\r\n      setAnswer(newFirstNumber - newSecondNumber)\r\n    } else if(randomSymbol == \"*\"){\r\n\r\n      newFirstNumber = Math.floor(Math.random() * 10)\r\n      newSecondNumber = Math.floor(Math.random() * 10)\r\n      setAnswer(newFirstNumber * newSecondNumber)\r\n    } else if(randomSymbol == \"/\"){\r\n      newFirstNumber = Math.floor(Math.random() * 100)\r\n      newSecondNumber = Math.floor(Math.random() * 10)\r\n\r\n      if(newFirstNumber < newSecondNumber){ // this will make sure the second value is < first value\r\n\r\n        let tempFirstNumber = newFirstNumber\r\n        newFirstNumber = newSecondNumber\r\n        newSecondNumber = tempFirstNumber\r\n\r\n      } // ends value check\r\n      if(newFirstNumber % newSecondNumber != 0 && newSecondNumber !== 0){\r\n\r\n        let tempFirstNumber = newFirstNumber - newFirstNumber % newSecondNumber\r\n        newFirstNumber = tempFirstNumber \r\n\r\n      } // ends if\r\n      if(newFirstNumber > newSecondNumber * 10){\r\n\r\n        newFirstNumber = newSecondNumber * 10\r\n\r\n      }\r\n      setAnswer(newFirstNumber / newSecondNumber)\r\n      \r\n    }\r\n    if(newFirstNumber == 0 || newSecondNumber == 0){\r\n      Genrate_A_Question()\r\n      console.log(\"syncing\")\r\n      console.log(newFirstNumber,newSecondNumber)\r\n    } else{\r\n    setFirstNumber(newFirstNumber)\r\n    setSecondNumber(newSecondNumber)\r\n    setSymbol(randomSymbol)\r\n    }\r\n  } // ends genrate a question method\r\n  const checkAnswer = ()=>{\r\n    parseInt(userAnswer) === answer ? setGameStatus(\"win\") : setGameStatus(\"lose\")\r\n\r\n  } // ends check answer function\r\n  const PARFORM_AFFTER_STEPS = ()=>{\r\n    checkAnswer()\r\n    updateStatus()\r\n    PLAY_SOUND()\r\n    setTimeout(()=>{\r\n      setGameStatus(\"playing\")\r\n    },2000)\r\n    \r\n  } // ENDS PARFORM AFFTER STEPS FUNCTION\r\n  function getClassName(){\r\n   if(gameStatus === \"\" || gameStatus === \"playing\"){ return \"default\"}\r\n   else if(gameStatus === \"lose\"){ return \"wrong\"}\r\n   else{ return \"right\"}\r\n\r\n  } // ends getclassname function \r\n  const PLAY_SOUND = ()=>{\r\n    parseInt(userAnswer) !== answer ? new Audio(loseSound).play() : new Audio(winSound).play() \r\n  } // ENDS PLAYSOUND FUNCTION\r\n  const updateStatus = ()=>{\r\n    if(parseInt(userAnswer) == answer){\r\n      setTotalAnswer(totalAnswer+1)\r\n      setCorrectAnswer(correctAnswer+1)\r\n    } else if(parseInt(userAnswer) != answer){\r\n      setTotalAnswer(totalAnswer+1)\r\n      setWrongAnswer(wrongAnswer+1)\r\n    }\r\n  } // ends updatestatus function\r\n \r\n \r\n  return (\r\n    <main className={getClassName()}>\r\n      <div className='container'>\r\n        <div className='status-div'>\r\n        <h3>Status</h3>\r\n        <table>\r\n          <tr>\r\n            <td>Total Answers</td>\r\n            <td>{totalAnswer}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Correct Answers</td>\r\n            <td>{correctAnswer}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Wrong Answers</td>\r\n            <td>{wrongAnswer}</td>\r\n          </tr>\r\n        </table>\r\n        </div>\r\n        <section className='info'>\r\n          <h3>{gameStatus === \"\" ? \"Select a level below\" : \"Let's test your self\"}</h3>\r\n          <div className={`line ${getClassName()}`}></div>\r\n          {gameStatus === \"\" ? <StartButton levelValue={levelValue} setLevelValue={setLevelValue} setGameStatus={setGameStatus} Genrate_A_Question={Genrate_A_Question}/> :\r\n          <Quiz firstNumber={firstNumber} secondNumber={secondNumber} symbol={symbol} setUserAnswer={setUserAnswer} PARFORM_AFFTER_STEPS={PARFORM_AFFTER_STEPS} Genrate_A_Question={Genrate_A_Question} userAnswer={userAnswer} ></Quiz>\r\n          }\r\n        </section>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}